// Generated by view binder compiler. Do not edit!
package com.example.ketotracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ketotracker.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.MaterialAutoCompleteTextView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialAutoCompleteTextView actFoodSearch;

  @NonNull
  public final MaterialButton btnAddFood;

  @NonNull
  public final MaterialButton btnClearAll;

  @NonNull
  public final MaterialButton btnSelectDate;

  @NonNull
  public final TextInputEditText etQuantity;

  @NonNull
  public final RecyclerView recyclerFoodEntries;

  @NonNull
  public final TextView textCalculatedCalories;

  @NonNull
  public final TextView textCalculatedCarbs;

  @NonNull
  public final TextView textDailyTotalCalories;

  @NonNull
  public final TextView textDailyTotalCarbs;

  @NonNull
  public final TextInputLayout tilFoodSearch;

  private FragmentFoodBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialAutoCompleteTextView actFoodSearch, @NonNull MaterialButton btnAddFood,
      @NonNull MaterialButton btnClearAll, @NonNull MaterialButton btnSelectDate,
      @NonNull TextInputEditText etQuantity, @NonNull RecyclerView recyclerFoodEntries,
      @NonNull TextView textCalculatedCalories, @NonNull TextView textCalculatedCarbs,
      @NonNull TextView textDailyTotalCalories, @NonNull TextView textDailyTotalCarbs,
      @NonNull TextInputLayout tilFoodSearch) {
    this.rootView = rootView;
    this.actFoodSearch = actFoodSearch;
    this.btnAddFood = btnAddFood;
    this.btnClearAll = btnClearAll;
    this.btnSelectDate = btnSelectDate;
    this.etQuantity = etQuantity;
    this.recyclerFoodEntries = recyclerFoodEntries;
    this.textCalculatedCalories = textCalculatedCalories;
    this.textCalculatedCarbs = textCalculatedCarbs;
    this.textDailyTotalCalories = textDailyTotalCalories;
    this.textDailyTotalCarbs = textDailyTotalCarbs;
    this.tilFoodSearch = tilFoodSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.act_food_search;
      MaterialAutoCompleteTextView actFoodSearch = ViewBindings.findChildViewById(rootView, id);
      if (actFoodSearch == null) {
        break missingId;
      }

      id = R.id.btn_add_food;
      MaterialButton btnAddFood = ViewBindings.findChildViewById(rootView, id);
      if (btnAddFood == null) {
        break missingId;
      }

      id = R.id.btn_clear_all;
      MaterialButton btnClearAll = ViewBindings.findChildViewById(rootView, id);
      if (btnClearAll == null) {
        break missingId;
      }

      id = R.id.btn_select_date;
      MaterialButton btnSelectDate = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectDate == null) {
        break missingId;
      }

      id = R.id.et_quantity;
      TextInputEditText etQuantity = ViewBindings.findChildViewById(rootView, id);
      if (etQuantity == null) {
        break missingId;
      }

      id = R.id.recycler_food_entries;
      RecyclerView recyclerFoodEntries = ViewBindings.findChildViewById(rootView, id);
      if (recyclerFoodEntries == null) {
        break missingId;
      }

      id = R.id.text_calculated_calories;
      TextView textCalculatedCalories = ViewBindings.findChildViewById(rootView, id);
      if (textCalculatedCalories == null) {
        break missingId;
      }

      id = R.id.text_calculated_carbs;
      TextView textCalculatedCarbs = ViewBindings.findChildViewById(rootView, id);
      if (textCalculatedCarbs == null) {
        break missingId;
      }

      id = R.id.text_daily_total_calories;
      TextView textDailyTotalCalories = ViewBindings.findChildViewById(rootView, id);
      if (textDailyTotalCalories == null) {
        break missingId;
      }

      id = R.id.text_daily_total_carbs;
      TextView textDailyTotalCarbs = ViewBindings.findChildViewById(rootView, id);
      if (textDailyTotalCarbs == null) {
        break missingId;
      }

      id = R.id.til_food_search;
      TextInputLayout tilFoodSearch = ViewBindings.findChildViewById(rootView, id);
      if (tilFoodSearch == null) {
        break missingId;
      }

      return new FragmentFoodBinding((LinearLayout) rootView, actFoodSearch, btnAddFood,
          btnClearAll, btnSelectDate, etQuantity, recyclerFoodEntries, textCalculatedCalories,
          textCalculatedCarbs, textDailyTotalCalories, textDailyTotalCarbs, tilFoodSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
