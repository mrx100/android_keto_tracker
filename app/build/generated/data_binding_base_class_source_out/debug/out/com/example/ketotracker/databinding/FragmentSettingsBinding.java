// Generated by view binder compiler. Do not edit!
package com.example.ketotracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ketotracker.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnClearAllData;

  @NonNull
  public final MaterialButton btnExportAllData;

  @NonNull
  public final MaterialButton btnExportFoodDatabase;

  @NonNull
  public final MaterialButton btnExportHealthMetrics;

  @NonNull
  public final MaterialButton btnImportAllData;

  @NonNull
  public final MaterialButton btnImportFoodDatabase;

  @NonNull
  public final MaterialButton btnImportHealthMetrics;

  @NonNull
  public final MaterialButton btnSavePreferences;

  @NonNull
  public final TextInputEditText etCarbLimit;

  @NonNull
  public final TextInputEditText etHeight;

  @NonNull
  public final TextInputEditText etTargetWeight;

  private FragmentSettingsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnClearAllData, @NonNull MaterialButton btnExportAllData,
      @NonNull MaterialButton btnExportFoodDatabase, @NonNull MaterialButton btnExportHealthMetrics,
      @NonNull MaterialButton btnImportAllData, @NonNull MaterialButton btnImportFoodDatabase,
      @NonNull MaterialButton btnImportHealthMetrics, @NonNull MaterialButton btnSavePreferences,
      @NonNull TextInputEditText etCarbLimit, @NonNull TextInputEditText etHeight,
      @NonNull TextInputEditText etTargetWeight) {
    this.rootView = rootView;
    this.btnClearAllData = btnClearAllData;
    this.btnExportAllData = btnExportAllData;
    this.btnExportFoodDatabase = btnExportFoodDatabase;
    this.btnExportHealthMetrics = btnExportHealthMetrics;
    this.btnImportAllData = btnImportAllData;
    this.btnImportFoodDatabase = btnImportFoodDatabase;
    this.btnImportHealthMetrics = btnImportHealthMetrics;
    this.btnSavePreferences = btnSavePreferences;
    this.etCarbLimit = etCarbLimit;
    this.etHeight = etHeight;
    this.etTargetWeight = etTargetWeight;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear_all_data;
      MaterialButton btnClearAllData = ViewBindings.findChildViewById(rootView, id);
      if (btnClearAllData == null) {
        break missingId;
      }

      id = R.id.btn_export_all_data;
      MaterialButton btnExportAllData = ViewBindings.findChildViewById(rootView, id);
      if (btnExportAllData == null) {
        break missingId;
      }

      id = R.id.btn_export_food_database;
      MaterialButton btnExportFoodDatabase = ViewBindings.findChildViewById(rootView, id);
      if (btnExportFoodDatabase == null) {
        break missingId;
      }

      id = R.id.btn_export_health_metrics;
      MaterialButton btnExportHealthMetrics = ViewBindings.findChildViewById(rootView, id);
      if (btnExportHealthMetrics == null) {
        break missingId;
      }

      id = R.id.btn_import_all_data;
      MaterialButton btnImportAllData = ViewBindings.findChildViewById(rootView, id);
      if (btnImportAllData == null) {
        break missingId;
      }

      id = R.id.btn_import_food_database;
      MaterialButton btnImportFoodDatabase = ViewBindings.findChildViewById(rootView, id);
      if (btnImportFoodDatabase == null) {
        break missingId;
      }

      id = R.id.btn_import_health_metrics;
      MaterialButton btnImportHealthMetrics = ViewBindings.findChildViewById(rootView, id);
      if (btnImportHealthMetrics == null) {
        break missingId;
      }

      id = R.id.btn_save_preferences;
      MaterialButton btnSavePreferences = ViewBindings.findChildViewById(rootView, id);
      if (btnSavePreferences == null) {
        break missingId;
      }

      id = R.id.et_carb_limit;
      TextInputEditText etCarbLimit = ViewBindings.findChildViewById(rootView, id);
      if (etCarbLimit == null) {
        break missingId;
      }

      id = R.id.et_height;
      TextInputEditText etHeight = ViewBindings.findChildViewById(rootView, id);
      if (etHeight == null) {
        break missingId;
      }

      id = R.id.et_target_weight;
      TextInputEditText etTargetWeight = ViewBindings.findChildViewById(rootView, id);
      if (etTargetWeight == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, btnClearAllData, btnExportAllData,
          btnExportFoodDatabase, btnExportHealthMetrics, btnImportAllData, btnImportFoodDatabase,
          btnImportHealthMetrics, btnSavePreferences, etCarbLimit, etHeight, etTargetWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
