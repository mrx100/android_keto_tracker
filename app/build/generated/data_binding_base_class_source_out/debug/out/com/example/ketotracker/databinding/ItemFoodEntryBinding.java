// Generated by view binder compiler. Do not edit!
package com.example.ketotracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ketotracker.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFoodEntryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final MaterialButton btnEdit;

  @NonNull
  public final TextView textCalories;

  @NonNull
  public final TextView textCarbs;

  @NonNull
  public final TextView textFoodName;

  @NonNull
  public final TextView textQuantity;

  private ItemFoodEntryBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDelete, @NonNull MaterialButton btnEdit,
      @NonNull TextView textCalories, @NonNull TextView textCarbs, @NonNull TextView textFoodName,
      @NonNull TextView textQuantity) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.textCalories = textCalories;
    this.textCarbs = textCarbs;
    this.textFoodName = textFoodName;
    this.textQuantity = textQuantity;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFoodEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFoodEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_food_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFoodEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_edit;
      MaterialButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.text_calories;
      TextView textCalories = ViewBindings.findChildViewById(rootView, id);
      if (textCalories == null) {
        break missingId;
      }

      id = R.id.text_carbs;
      TextView textCarbs = ViewBindings.findChildViewById(rootView, id);
      if (textCarbs == null) {
        break missingId;
      }

      id = R.id.text_food_name;
      TextView textFoodName = ViewBindings.findChildViewById(rootView, id);
      if (textFoodName == null) {
        break missingId;
      }

      id = R.id.text_quantity;
      TextView textQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textQuantity == null) {
        break missingId;
      }

      return new ItemFoodEntryBinding((MaterialCardView) rootView, btnDelete, btnEdit, textCalories,
          textCarbs, textFoodName, textQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
