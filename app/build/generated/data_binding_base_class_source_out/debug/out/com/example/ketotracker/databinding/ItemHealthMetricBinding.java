// Generated by view binder compiler. Do not edit!
package com.example.ketotracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ketotracker.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHealthMetricBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDeleteMetric;

  @NonNull
  public final MaterialButton btnEditMetric;

  @NonNull
  public final TextView textBloodPressure;

  @NonNull
  public final TextView textBmi;

  @NonNull
  public final TextView textGki;

  @NonNull
  public final TextView textGlucose;

  @NonNull
  public final TextView textKetones;

  @NonNull
  public final TextView textMetricDate;

  @NonNull
  public final TextView textNotes;

  @NonNull
  public final TextView textWeight;

  private ItemHealthMetricBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDeleteMetric, @NonNull MaterialButton btnEditMetric,
      @NonNull TextView textBloodPressure, @NonNull TextView textBmi, @NonNull TextView textGki,
      @NonNull TextView textGlucose, @NonNull TextView textKetones,
      @NonNull TextView textMetricDate, @NonNull TextView textNotes, @NonNull TextView textWeight) {
    this.rootView = rootView;
    this.btnDeleteMetric = btnDeleteMetric;
    this.btnEditMetric = btnEditMetric;
    this.textBloodPressure = textBloodPressure;
    this.textBmi = textBmi;
    this.textGki = textGki;
    this.textGlucose = textGlucose;
    this.textKetones = textKetones;
    this.textMetricDate = textMetricDate;
    this.textNotes = textNotes;
    this.textWeight = textWeight;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHealthMetricBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHealthMetricBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_health_metric, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHealthMetricBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_metric;
      MaterialButton btnDeleteMetric = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteMetric == null) {
        break missingId;
      }

      id = R.id.btn_edit_metric;
      MaterialButton btnEditMetric = ViewBindings.findChildViewById(rootView, id);
      if (btnEditMetric == null) {
        break missingId;
      }

      id = R.id.text_blood_pressure;
      TextView textBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (textBloodPressure == null) {
        break missingId;
      }

      id = R.id.text_bmi;
      TextView textBmi = ViewBindings.findChildViewById(rootView, id);
      if (textBmi == null) {
        break missingId;
      }

      id = R.id.text_gki;
      TextView textGki = ViewBindings.findChildViewById(rootView, id);
      if (textGki == null) {
        break missingId;
      }

      id = R.id.text_glucose;
      TextView textGlucose = ViewBindings.findChildViewById(rootView, id);
      if (textGlucose == null) {
        break missingId;
      }

      id = R.id.text_ketones;
      TextView textKetones = ViewBindings.findChildViewById(rootView, id);
      if (textKetones == null) {
        break missingId;
      }

      id = R.id.text_metric_date;
      TextView textMetricDate = ViewBindings.findChildViewById(rootView, id);
      if (textMetricDate == null) {
        break missingId;
      }

      id = R.id.text_notes;
      TextView textNotes = ViewBindings.findChildViewById(rootView, id);
      if (textNotes == null) {
        break missingId;
      }

      id = R.id.text_weight;
      TextView textWeight = ViewBindings.findChildViewById(rootView, id);
      if (textWeight == null) {
        break missingId;
      }

      return new ItemHealthMetricBinding((MaterialCardView) rootView, btnDeleteMetric,
          btnEditMetric, textBloodPressure, textBmi, textGki, textGlucose, textKetones,
          textMetricDate, textNotes, textWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
